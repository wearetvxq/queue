# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.lsits_param import LsitsParam  # noqa: F401,E501
from swagger_server import util


class Data(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, priority: str=None, lsits: List[LsitsParam]=None):  # noqa: E501
        """Data - a model defined in Swagger

        :param name: The name of this Data.  # noqa: E501
        :type name: str
        :param priority: The priority of this Data.  # noqa: E501
        :type priority: str
        :param lsits: The lsits of this Data.  # noqa: E501
        :type lsits: List[LsitsParam]
        """
        self.swagger_types = {
            'name': str,
            'priority': str,
            'lsits': List[LsitsParam]
        }

        self.attribute_map = {
            'name': 'name',
            'priority': 'priority',
            'lsits': 'lsits'
        }

        self._name = name
        self._priority = priority
        self._lsits = lsits

    @classmethod
    def from_dict(cls, dikt) -> 'Data':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The data of this Data.  # noqa: E501
        :rtype: Data
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Data.

        消息队列名称  # noqa: E501

        :return: The name of this Data.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Data.

        消息队列名称  # noqa: E501

        :param name: The name of this Data.
        :type name: str
        """

        self._name = name

    @property
    def priority(self) -> str:
        """Gets the priority of this Data.

        优先级  # noqa: E501

        :return: The priority of this Data.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority: str):
        """Sets the priority of this Data.

        优先级  # noqa: E501

        :param priority: The priority of this Data.
        :type priority: str
        """

        self._priority = priority

    @property
    def lsits(self) -> List[LsitsParam]:
        """Gets the lsits of this Data.


        :return: The lsits of this Data.
        :rtype: List[LsitsParam]
        """
        return self._lsits

    @lsits.setter
    def lsits(self, lsits: List[LsitsParam]):
        """Sets the lsits of this Data.


        :param lsits: The lsits of this Data.
        :type lsits: List[LsitsParam]
        """

        self._lsits = lsits
